# --------------------------------------------------------------
# 반복문 - 2 while 반복문
# - 반복의 횟수가 정해지지 않은 경우에 사용
# - 반복의 횟수가 정해진 경우에도 사용 가능함
# --------------------------------------------------------------
# [요청] 사용자로부터 좋아하는 음식명을 입력 받아 주세요.
#       => input()
#       단, 사용자가 '종료'라는 음식명을 입력 전까지 입력 받으세요.
#       => 몇 번 입력 받아야 입력이 끝날지 알 수 없음
# --------------------------------------------------------------

# --------------------------------------------------------------
# [요청] 사용자로부터 좋아하는 음식명을 입력 받아 주세요.
#       => input()
#       단, Top 5로 기징 좋아 하는 음식 5개만 입력 받으세요.
#       => 사용자의 Top5 음식명 출력
# --------------------------------------------------------------
TEST = False

if TEST:       # Flag 변수
    myfood = []
    for cnt in range(5):
        foods = input(f"좋아하는 음식명 {cnt+1}번째: ")
        myfood.append(foods)

    print("당신은", end='')
    for f in myfood:
        print(foods, end=', 'if myfood[-1] != foods else ' ')
    print("음식을 좋아하는 군요")

    strFood=""
    for cnt in range(5):
        food=input(f"좋아하는 음식명 {cnt+1}번째: ")
        strFood += food
        strFood = strFood + (', ' if cnt != 4 else ' ')

    print(f'strFood => {strFood}')

# ----------------------------------------------------------------
# 기본 while 문법
# while 조건식 :
# <--> 실행 코드
# <--> 실행 코드
# ----------------------------------------------------------------
# 타이머 프로그램 만들기 => 다운카운팅 : 10 9 8 ......, 1
downCnt = 10
while downCnt>=1:           # while downCnt > 0 :
    print(f'다운 카운팅 {downCnt}초')
    downCnt -= 1        # downCnt = downCnt - 1
print("시간 종료")

# 타이머 프로그램 만들기 => 업카운팅 : 1 2 3 ......, 10
upCnt = 1
while upCnt<=10:
    print(f'다운 카운팅 {upCnt}초')
    upCnt += 1
print("시간 종료")

# for문 타이머 프로그램 만들기 => 다운카운팅 : 10 9 8 ......, 1
for n in range(10,0,-1):
    print(f'다운 카운팅 {n}초')
print("시간 종료")

# for문 타이머 프로그램 만들기 => 업카운팅 : 1 2 3 ......, 10
for n in range(1, 11):
    print(f'업 카운팅 {n}초')
print("시간 종료")